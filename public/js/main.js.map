{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/post-dialog/post-dialog.component.css","webpack:///./src/app/post-dialog/post-dialog.component.html","webpack:///./src/app/post-dialog/post-dialog.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/post.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".float-button {\\r\\n    position: fixed;\\r\\n    bottom: 40px;\\r\\n    right: 40px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZsb2F0LWJ1dHRvbiB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBib3R0b206IDQwcHg7XHJcbiAgICByaWdodDogNDBweDtcclxufSJdfQ== */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n\\t<span>Iu15 2.0</span>\\n</mat-toolbar>\\n\\n<mat-divider></mat-divider>\\n\\n<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around stretch\\\" >\\n\\t<app-post *ngFor=\\\"let p of posts\\\" [post]=\\\"p\\\" ></app-post>\\n</div>\\n\\n<button mat-fab color=\\\"primary\\\" class=\\\"float-button\\\" (click)=\\\"openDialog()\\\">\\n\\t<mat-icon>add</mat-icon>\\n</button>\"","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n\ttitle = 'angular';\n\tprivate posts: Post[];\n\n\tconstructor(\n\t\tpublic dialog: MatDialog,\n\t\tpublic postService: PostService) {}\n\n\tngOnInit() {\n\t\tthis.posts = this.postService.posts;\n\t}\n\n\topenDialog() {\n\t\tconst dialogRef = this.dialog.open(PostDialogComponent, {\n\t\t\twidth: '600px'\n\t\t});\n\t\tdialogRef.afterClosed().subscribe(\n\t\t\t(result) => {\n\t\t\t\tif(result) {\n\t\t\t\t\tthis.postService.save(result.post, result.file);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule, MatDialog } from '@angular/material';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n  providers: [\n    PostService\n  ],\n\n  entryComponents: [\n    PostDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QtZGlhbG9nL3Bvc3QtZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around left\\\" >\\n\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n\\n\\t\\t<mat-form-field fxFlex=\\\"50\\\">\\n\\t\\t\\t<input matInput placeholder=\\\"Your Name\\\" [(ngModel)]=\\\"data.post.name\\\">\\n\\t\\t\\t<mat-hint>Enter your name here</mat-hint>\\n\\t\\t</mat-form-field>\\n\\n\\t\\t<mat-form-field fxFlex=\\\"40\\\">\\n\\t\\t\\t<input matInput placeholder=\\\"Your Email\\\" [(ngModel)]=\\\"data.post.email\\\">\\n\\t\\t\\t<mat-hint>Enter your name email</mat-hint>\\n\\t\\t</mat-form-field>\\n\\n\\t</div>\\n\\n\\t<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n\\n\\t\\t<mat-form-field fxFlex=\\\"50\\\">\\n\\t\\t\\t<input matInput placeholder=\\\"Title\\\" [(ngModel)]=\\\"data.post.title\\\">\\n\\t\\t</mat-form-field>\\n\\n\\t\\t<mat-form-field fxFlex=\\\"40\\\">\\n\\t\\t\\t<input matInput placeholder=\\\"Subtitle\\\" [(ngModel)]=\\\"data.post.subtitle\\\">\\n\\t\\t</mat-form-field>\\n\\n\\t</div>\\n\\n\\t<mat-form-field>\\n\\t\\t<textarea matInput placeholder=\\\"Enter your message here\\\" [(ngModel)]=\\\"data.post.message\\\"></textarea>\\n\\t</mat-form-field>\\n\\n</div>\\n\\n<input type=\\\"file\\\" style=\\\"display: none;\\\" (change)=\\\"changedFile($event)\\\" #fileinput>\\n<button mat-stroked-button color=\\\"primary\\\" (click)=\\\"fileinput.click()\\\">\\n\\t<mat-icon>add_a_photo</mat-icon>\\n\\tAdd a image\\n</button>\\n&nbsp;\\n<label *ngIf=\\\"filename!=''\\\">\\n\\t<strong>File:</strong> {{filename}}\\n\\t<mat-icon color=\\\"primary\\\">done</mat-icon>\\n</label>\\n\\n<br><br>\\n\\n<div style=\\\"text-align: center;\\\">\\n\\t<button mat-button color=\\\"primary\\\" (click)=\\\"save()\\\">OK</button>\\n\\t<button mat-button color=\\\"warn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { Post } from '../post';\n\n@Component({\n\tselector: 'app-post-dialog',\n\ttemplateUrl: './post-dialog.component.html',\n\tstyleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n\tprivate filename: string = '';\n\n\tprivate data = {\n\t\tpost: new Post(\"\", \"\", \"\", \"\", \"\", \"\"),\n\t\tfile: null\n\t}\n\n\tconstructor(\n\t\tpublic dialogref: MatDialogRef<PostDialogComponent> ) { }\n\n\tngOnInit() {\n\t}\n\n\tchangedFile(event) {\n\t\t//console.log(event.target.files[0]);\n\t\tthis.filename = event.target.files[0].name;\n\t\tthis.data.file = event.target.files[0];\n\t}\n\n\tsave() {\n\t\tthis.dialogref.close(this.data);\n\t}\n\n\tcancel() {\n\t\tthis.dialogref.close(null);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpEvent } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable()\n\nexport class PostService {\n\n\tpublic posts: Post[] = [];\n\n\tconstructor(private http: HttpClient) {\n\t\tthis.http.get(\"/api/\").subscribe(\n\t    \t(posts: any[]) => {\n\t\t\t\tfor(let p of posts){\n\t        \t\tthis.posts.push(\n\t\t\t\t\t\tnew Post(p.name, p.title, p.subtitle, p.email, p.message, p.file, p.id, p.likes)\n\t        \t\t);\n\t\t\t\t}\n\t    \t}\n\t\t);\n\t}\n\n\tsave(post: Post, file: File) {\n\t\tconst uploadData = new FormData();\n\t\tuploadData.append('name', post.name);\n\t\tuploadData.append('email', post.email);\n\t\tuploadData.append('title', post.title);\n\t\tuploadData.append('subtitle', post.subtitle);\n\t\tuploadData.append('message', post.message);\n\t\tuploadData.append('file', file, file.name);\n\n\t\tthis.http.post(\"/api\", uploadData, { reportProgress: true, observe: 'events'})\n\t\t\t.subscribe((event: any) => {\n\n\t\t\t\tif (event.type == HttpEventType.Response) {\n\t\t\t\t\t// console.log(event);\n\t\t\t\t\tlet p: any = event.body;\n\t\t\t\t\tthis.posts.push(\n\t\t\t\t\t\tnew Post(\n\t\t\t\t\t\t\tp.name, p.title,p.subtitle,\n\t\t\t\t\t\t\tp.email,p.message,p.file,\n\t\t\t\t\t\t\tp.id,p.likes\n\t\t\t\t\t\t)\n\t\t\t\t\t);          \n\t\t\t\t}\n\t\t\t\tif (event.type == HttpEventType.UploadProgress) {\n\t\t\t\t\tconsole.log('UploadProgress');\n\t\t\t\t\tconsole.log(event);\n\t\t\t\t}        \n\t\t\t})\n\t  }\n\n\t  like(id: number) {\n\t\t  this.http.get('/api/like/' + id)\n\t\t  .subscribe(\n\t\t\t  (event: any) => {\n\t\t\t\t  let p = this.posts.find((p) => p.id == id);\n\t\t\t\t  p.likes = event.likes;\n\t\t\t  }\n\t\t  )\n\t  }\n\n\t  delete(id: number) {\n\t\tthis.http.delete('/api/' + id)\n\t\t.subscribe(\n\t\t\t(event) => {\n\t\t\t\tlet i = this.posts.findIndex((p) => p.id == id);\n\t\t\t\tif (i >= 0)\n\t\t\t\t\tthis.posts.splice(i,1);\n\t\t\t}\n\t\t)\n\t}\n}\n","export class Post {\r\n    constructor(\r\n        public name: string,\r\n        public title: string,\r\n        public subtitle: string,\r\n        public email: string,\r\n        public message: string,\r\n        public file?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ) {}\r\n}","module.exports = \".card {\\r\\n    max-width: 300px;\\r\\n    margin: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC9wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvcG9zdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgIG1hcmdpbjogMTBweDtcclxufSJdfQ== */\"","module.exports = \"<mat-card fxFlex class=\\\"card\\\">\\n\\t<mat-card-header>\\n\\t\\t<div mat-card-avatar></div>\\n\\t\\t<mat-card-title>{{post.title}}</mat-card-title>\\n\\t\\t<mat-card-subtitle>{{post.subtitle}}</mat-card-subtitle>\\n\\t</mat-card-header>\\n\\t<img mat-card-image src=\\\"/storage/{{post.file}}\\\">\\n\\t<mat-card-content>\\n\\t\\t<p>\\n\\t\\t\\t{{post.message}}\\n\\t\\t</p>\\n\\t</mat-card-content>\\n\\t<mat-card-actions>\\n\\t\\t<button mat-button color=\\\"primary\\\" (click)=\\\"like()\\\">LIKE</button>\\n\\t\\t<button mat-button color=\\\"accent\\\" (click)=\\\"delete()\\\">DELETE</button>\\n\\t\\t<mat-icon color=\\\"warn\\\" *ngIf=\\\"post.likes>0\\\" [matBadge]=\\\"post.likes\\\" matBadgePosition=\\\"above after\\\" matBadgeColor=\\\"warn\\\" matBadgeOverlap=\\\"false\\\">favorite</mat-icon>\\n\\t</mat-card-actions>\\n</mat-card>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\n\n@Component({\n\tselector: 'app-post',\n\ttemplateUrl: './post.component.html',\n\tstyleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n\t@Input() post: Post;\n\n\tconstructor(\n\t\tprivate postService: PostService ) { }\n\n\tngOnInit() {\n\t}\n\n\tlike() {\n\t\tthis.postService.like(this.post.id);\n\t}\n\n\tdelete() {\n\t\tthis.postService.delete(this.post.id);\n\t}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}